name: Docker

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - published

env:
  platforms: "linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/amd64,linux/ppc64le,linux/riscv64,linux/s390x"

permissions:
  contents: read

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-build-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      id-token: write # This is required for requesting the JWT for CoSign
      contents: read  # This is required for actions/checkout
      packages: write # This is required for pushing Docker images to ghcr.io
    steps:
      - name: üõ°Ô∏è Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            auth.docker.io:443
            docker-images-prod.6aa30f8b08e16409b46e0173d6de2f56.r2.cloudflarestorage.com:443
            fulcio.sigstore.dev:443
            ghcr.io:443
            github.com:443
            index.docker.io:443
            oauth2.sigstore.dev:443
            objects.githubusercontent.com:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            raw.githubusercontent.com:443
            registry-1.docker.io:443
            rekor.sigstore.dev:443
            release-assets.githubusercontent.com:443
            storage.googleapis.com:443
            sum.golang.org:443
            tuf-repo-cdn.sigstore.dev:443

      - name: üöö Check out the repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: üèóÔ∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        with:
          version: latest

      - name: üîë Log in to Docker
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üîë Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üè∑Ô∏è Fetch git tags for `git describe`
        run: "git fetch --force --prune --unshallow --tags"

      - name: üìù Run `git describe` and save its output
        run: echo 'GIT_DESCRIBE='`git describe --tags --always --long` >> $GITHUB_OUTPUT
        id: git-describe

      - name: üìù Calculate metadata for minimal Docker images
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        id: meta
        with:
          images: |
            ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_PROJECT }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=edge
          annotations: |
            io.artifacthub.package.license=MIT
            io.artifacthub.package.readme-url=https://github.com/${{ github.repository }}/blob/main/README.md
            io.artifacthub.package.maintainers=[{"name":"DarthMole","email":"upswake@darthmole.dev"}]
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: index

      - name: üóÇÔ∏è Go Build Cache for Docker
        uses: actions/cache@v4
        with:
          path: go-build-cache
          key: ${{ runner.os }}-go-build-cache-${{ hashFiles('**/go.sum') }}

      - name: üóÇÔ∏è Inject go-build-cache
        uses: reproducible-containers/buildkit-cache-dance@4b2444fec0c0fb9dbf175a96c094720a692ef810 # v2.1.4
        with:
          cache-source: go-build-cache

      - name: üöÄ Build and deploy minimal Docker images
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: build
        with:
          target: "minimal"
          context: .
          file: ./Containerfile
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha #,mode=max
          build-args: |
            ${{ format('GIT_DESCRIBE={0}', steps.git-describe.outputs.GIT_DESCRIBE) }}
            ${{ format('COMMIT_SHA={0}', github.sha) }}
          platforms: ${{ env.platforms }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: "mode=max"

      - name: ‚úçÔ∏è Install Cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0

      - name: ‚úçÔ∏è Sign the Docker Hub images
        if: ${{ github.event_name == 'release' }}
        run: |
          cosign sign --recursive --yes "${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_PROJECT }}@${{ steps.build.outputs.digest }}"

      - name: ‚úçÔ∏è Sign the GitHub Container Registry images
        if: ${{ github.event_name == 'release' }}
        run: |
          cosign sign --recursive --yes "ghcr.io/${GITHUB_REPOSITORY@L}@${{ steps.build.outputs.digest }}"
