name: Go

on:
  push:
    branches: ["main"]
  pull_request:

permissions:
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: 🛡️ Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            auth.docker.io:443
            github.com:443
            go.dev:443
            golang.org:443
            objects.githubusercontent.com:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            raw.githubusercontent.com:443
            registry-1.docker.io:443
            release-assets.githubusercontent.com:443
            storage.googleapis.com:443
            sum.golang.org:443

      - name: 🚚 Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: 🏗️ Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "go.mod"
      - name: 🏗️Set up Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff
        with:
          just-version: 1.42.4
      - name: ⚙️ Setup Nut Server
        run: |
          just run-nut-server
      - name: 🧪 Run `go test`
        run: |
          go test -coverpkg=$(go list ./... | grep -v 'internal/mocks' | tr '\n' ',') -coverprofile=coverage.txt -race -v ./...
      - name: ⚙️ Shut down Nut Server
        run: |
          just stop-nut-server
      #- name: ☂️ Report coverage rates to Codecov
      #  uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4.6.0
      #  with:
      #    fail_ci_if_error: true # default: false
      #    file: ./coverage.txt
      #    flags: unittests
      #    token: ${{ secrets.CODECOV_TOKEN }}
  regenerate:
    name: Regenerate
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: 🛡️ Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          policy: test.regenerate
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            go.dev:443
            golang.org:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            release-assets.githubusercontent.com:443
            storage.googleapis.com:443
            sum.golang.org:443

      - name: 🚚 Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: 🏗️ Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "go.mod"
      - name: 🧪 Run `go mod tidy`
        run: |
          go mod tidy
      - name: 🔍 Check if any files are changed
        run: |
          if ! git diff --exit-code; then
            echo "Please run 'go mod tidy'"
            exit 1
          fi
        #- name: 🎭 Install GoMock
        #run: go install go.uber.org/mock/mockgen@v0.3.0
      - name: 🧪 Run `go generate`
        run: |
          # rm -rf ./internal/mocks
          go generate ./...
      - name: 🔍 Check if any files are changed
        run: |
          if ! git diff --exit-code; then
            echo "Please run 'go gonerate ./...'"
            exit 1
          fi